#!/bin/bash
# vim: filetype=sh
#
# apply-config
#
# This function will ensure the configuration of a host/group is in line with
# how it should be configured to work within SCI using the roles set up for it
# in the inventory.  
#
# This depends on the ansible-agent being running and the env vars available 
# the agent file.
#

###
### Variables
###
# operational variables - don't change
show_commands=false
apply_changes=false
limit_arg=""
show_diff=false
IFS='' read -r -d '' usage <<"EOF"

apply_config: ensure all standard packages are installed on SCI hosts

Usage: 
  apply_config [ -h|--help ]
  apply_config [ -d|--diff ] [ -s|--show ] [ -x|--execute ] 
                    <host|group> 
  
Arguments: 
  -d|--diff        Show the details of the changes that will/would be done
  -h|--help        Show what you are seeing right now
  -s|--show        Display the ansible command only
  -x|--execute     Actually execute the command (default is just check for changes)
  <host|group>     The target inventory group(s) or host(s)

EOF
  
###
### Process Args
###
while [[ $# -gt 0 ]]; do
   case $1 in
       -d|--diff)      
           show_diff=true
           ;;
       -h|--help)      
           echo "$usage" && exit 0
           ;;
       -s|--show)      
           show_commands=true
           ;;
       -x|--execute)   
           apply_changes=true
           ;;
       -*)             
           echo "ERROR: unknown option $1" && exit 1
           ;;
       *)              
           if [[ -z "$limit_arg" ]]; then 
              limit_arg="--limit $1"
           else
              echo "ERROR: superfluous option $1" && exit 1
           fi
           ;;
   esac
   shift
done

###
### Needs to be run as root
###
if [[ ${EUID} -ne 0 ]]; then
   echo "ERROR: insufficient privileges (try sudo)"
   exit 2
fi

###
### Needs to have a specified target
###
if [[ "${limit_arg}" == "" ]]; then
   echo "ERROR: Unspecified target groups/hosts"
   exit 2
fi
[[ ${limit_arg} =~ "SelfAdminHosts" ]] || limit_arg+=",!SelfAdminHosts"

###
### Load the Ansible agent info
###
AGENTVARS=$( /sci-it/ansible/bin/ansible-agent -i )
if [ $? -ne 0 ]; then
   echo >&2 "ERROR: unable to contact the Ansible agent."
   exit 1
fi
eval ${AGENTVARS}

###
### Run the ansible command
args=""
exec_command=""
[[ "${apply_changes}" != true ]] && args+="--check "
[[ "${show_diff}" = true ]] && args+="--diff"
exec_command+="/usr/bin/ansible-playbook ${limit_arg} ${args} /sci-it/ansible/site.yaml"
exec_command=$(echo $exec_command | sed 's/ \+/ /g')
# Show or run the command
if [[ "${show_commands}" = true ]]; then
    echo "${exec_command}"
else
    eval ${exec_command}
fi 

###
### See ya
###
exit 0
